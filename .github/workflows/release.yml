name: Perform Release
on:
  schedule:
    - cron:  '10 2 * * SUN'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          # SonarQube: Disabling shallow clone is recommended for improving relevancy of reporting
          # Hugo: Fetch all history for .GitInfo and .Lastmod
          fetch-depth: 0
      - name: Set up JDK 14
        uses: actions/setup-java@v1
        with:
          java-version: 14
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: latest
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Create Release Version
        id: release
        run: echo "::set-output name=version::$(date +'%Y.%m.%d-%H%M%S')"
      - name: Count commits in last week
        id: commits
        run: echo "::set-output name=count::$(git rev-list --count HEAD --since='last Saturday')"
      - name: Set release version
        run: mvn --batch-mode versions:set -DnewVersion=${{steps.release.outputs.version}} -DgenerateBackupPoms=false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Verify Project
        run: mvn --batch-mode --settings $GITHUB_WORKSPACE/build/settings.xml --activate-profiles sonar verify
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Publish to GitHub Packages Apache Maven
        if: steps.commits.outputs.count > 0
        run: mvn --batch-mode deploy -DskipTests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Build Website
        if: steps.commits.outputs.count > 0
        run: hugo --minify --i18n-warnings --path-warnings --source krei-docs
      - name: Deploy Website
        if: steps.commits.outputs.count > 0
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./krei-docs/public
          force_orphan: true
          cname: krei.projects.metio.wtf
      - name: Create Release
        if: steps.commits.outputs.count > 0
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{steps.release.outputs.version}}
          release_name: Release ${{steps.release.outputs.version}}
          draft: false
          prerelease: false
          body: |
            Automated release, see [commits](https://github.com/metio/krei/commits/${{ steps.release.outputs.version }}) for changes.

            Include this project as a dependency:
            ```xml
            <dependency>
              <groupId>wtf.metio.krei</groupId>
              <artifactId>krei-core</artifactId>
              <version>${{steps.release.outputs.version}}</version>
            </dependency>
            ```
            `krei` is currently not available in Maven Central, thus you have to pull it from [GitHub Packages](https://krei.projects.metio.wtf/contributors/dev-env/#github-packages).

            The [JShell](https://github.com/metio/krei/releases/download/${{ steps.release.outputs.version }}/krei-core-${{ steps.release.outputs.version }}-jshell.zip) artifact requires only Java11+ installed and contains its own `README` with further instructions.
      - name: Upload JShell Artifact
        if: steps.commits.outputs.count > 0
        id: upload-jshell-artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./krei-core/target/krei-core-${{steps.release.outputs.version}}-jshell.zip
          asset_name: krei-core-${{steps.release.outputs.version}}-jshell.zip
          asset_content_type: application/zip
      - name: Upload JShell Checksum
        if: steps.commits.outputs.count > 0
        id: upload-jshell-checksum
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./krei-core/target/krei-core-${{steps.release.outputs.version}}-jshell.zip.sha512
          asset_name: krei-core-${{steps.release.outputs.version}}-jshell.zip.sha512
          asset_content_type: text/plain
      - name: Send Mail
        if: steps.commits.outputs.count > 0
        uses: dawidd6/action-send-mail@v2
        with:
          server_address: ${{ secrets.MAIL_SERVER }}
          server_port: ${{ secrets.MAIL_PORT }}
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: krei release ${{ steps.release.outputs.version }}
          body: See https://github.com/metio/krei/releases/tag/${{ steps.release.outputs.version }} for details.
          to: krei@metio.groups.io
          from: ${{ secrets.MAIL_SENDER }}
      - name: Publish Toot
        if: steps.commits.outputs.count > 0
        uses: rzr/fediverse-action@master
        with:
          access-token: ${{ secrets.MASTODON_TOKEN }}
          message: "#krei version ${{ steps.release.outputs.version }} published! https://github.com/metio/krei/releases/tag/${{ steps.release.outputs.version }} #metio #java"
          host: ${{ secrets.MASTODON_SERVER }}
      - uses: BjornLuG/release-for-reddit-action@v1
        if: steps.commits.outputs.count > 0
        with:
          username: ${{ secrets.REDDIT_USERNAME }}
          password: ${{ secrets.REDDIT_PASSWORD }}
          app-id: ${{ secrets.REDDIT_APP_ID }}
          app-secret: ${{ secrets.REDDIT_APP_SECRET }}
          subreddit: ${{ secrets.REDDIT_SUBREDDIT }}
          url: https://github.com/metio/krei/releases/tag/${{ steps.release.outputs.version }}
